CREATE TABLE public.client (
                               id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               email   VARCHAR(255) UNIQUE,
                               name    VARCHAR(255),
                               number  VARCHAR(255),
                               surname VARCHAR(255)
);

CREATE TABLE public.employee (
                                 id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 email    VARCHAR(255),
                                 name     VARCHAR(255),
                                 surname  VARCHAR(255),
                                 password VARCHAR(255),
                                 role     SMALLINT NOT NULL,
                                 CONSTRAINT employee_role_check CHECK (role >= 0 AND role <= 1)
);

CREATE TABLE public.item (
                             id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             name        VARCHAR(255),
                             description VARCHAR(255),
                             cost        INTEGER
);

CREATE TABLE public.orders (
                               id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               created_at TIMESTAMP(6) WITH TIME ZONE,
                               status     VARCHAR(255),
                               client_id  BIGINT,
                               CONSTRAINT orders_status_check CHECK (
                                   status::text = ANY (ARRAY['NEW','PROCESSING','COMPLETED','CANCELED']::text[])
),
    CONSTRAINT fk_orders_client
        FOREIGN KEY (client_id) REFERENCES public.client(id) ON DELETE SET NULL
);

-- Индекс для ускорения проверок FK и джоинов по клиенту
CREATE INDEX IF NOT EXISTS idx_orders_client_id ON public.orders (client_id);

CREATE TABLE public.order_item (
                                   order_id BIGINT NOT NULL,
                                   item_id  BIGINT NOT NULL,
                                   CONSTRAINT order_item_pkey PRIMARY KEY (order_id, item_id),
                                   CONSTRAINT fk_order_item_order
                                       FOREIGN KEY (order_id) REFERENCES public.orders(id) ON DELETE CASCADE,
                                   CONSTRAINT fk_order_item_item
                                       FOREIGN KEY (item_id)  REFERENCES public.item(id)   ON DELETE CASCADE
);